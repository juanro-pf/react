{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseURL","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","validTitle","setValidTitle","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.596224ab.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState= {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset= () => {\r\n        setValues( initialState );\r\n    };\r\n\r\n    const handleInputChange= ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n};\r\n","const baseURL= process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken= ( endpoint, data, method= 'GET' ) => {\r\n\r\n  const url= `${baseURL}/${endpoint}`;\r\n\r\n  if( method === 'GET' ){\r\n    return fetch(url);\r\n  } else{\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify( data )\r\n    });\r\n  }\r\n\r\n};\r\n\r\nconst fetchWithToken= ( endpoint, data, method= 'GET' ) => {\r\n\r\n  const url= `${baseURL}/${endpoint}`;\r\n  const token= localStorage.getItem('token') || '';\r\n\r\n  if( method === 'GET' ){\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'x-token': token\r\n      }\r\n    });\r\n  } else{\r\n    return fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-token': token\r\n      },\r\n      body: JSON.stringify( data )\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport {\r\n  fetchWithoutToken,\r\n  fetchWithToken\r\n}","export const types= {\r\n\r\n  uiOpenModal: '[ui] Open modal',\r\n  uiCloseModal: '[ui] Close modal',\r\n\r\n  eventSetActive: '[event] Set active',\r\n  eventStartAddNew: '[event] Start add new',\r\n  eventAddNew: '[event] Add new',\r\n  eventClearActiveEvent: '[event] Clear active event',\r\n  eventUpdated: '[event] Event updated',\r\n  eventDeleted: '[event] Event deleted',\r\n  eventLoaded: '[event] Events loaded',\r\n  eventLogout: '[event] Logout event',\r\n\r\n  authCheckingFinish: '[auth] Finish checking login state',\r\n  authStartLogin: '[auth] Start login',\r\n  authLogin: '[auth] Login',\r\n  authStartRegister: '[auth] Start register',\r\n  authStartTokenRenew: '[auth] Start token renew',\r\n  authLogout: '[auth] Logout'\r\n  \r\n};","import moment from 'moment';\r\n\r\nexport const prepareEvents= (events= []) => {\r\n\r\n  return events.map(\r\n    (e) => ({\r\n      ...e,\r\n      end: moment(e.end).toDate(),\r\n      start: moment(e.start).toDate()\r\n    })\r\n  );\r\n\r\n};","import { types } from \"../types/types\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew= (event) => {\r\n  return async (dispatch, getState) => {\r\n\r\n    const { uid, name }= getState().auth;\r\n    \r\n    try {\r\n      const resp= await fetchWithToken('events', event, 'POST');\r\n      const body= await resp.json();\r\n      \r\n      if(body.ok){\r\n        event.id= body.event.id;\r\n        event.user= {\r\n          _id: uid,\r\n          name\r\n        };\r\n        dispatch( eventAddNew(event) );\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  };\r\n};\r\n\r\nconst eventAddNew= (event) => ({\r\n  type: types.eventAddNew,\r\n  payload: event\r\n});\r\n\r\nexport const eventSetActive= (event) => ({\r\n  type: types.eventSetActive,\r\n  payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent= () => ({\r\n  type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate= (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp= await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n      const body= await resp.json();\r\n\r\n      if(body.ok){\r\n        dispatch(eventUpdated(event));\r\n      } else{\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventUpdated= (event) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n});\r\n\r\nexport const eventStartDelete= () => {\r\n  return async (dispatch, getState) => {\r\n\r\n    const {id}= getState().calendar.activeEvent;\r\n\r\n    try {\r\n      const resp= await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n      const body= await resp.json();\r\n\r\n      if(body.ok){\r\n        dispatch(eventDeleted());\r\n      } else{\r\n        Swal.fire('Error', body.msg, 'error');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nconst eventDeleted= () => ({\r\n  type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading= () => {\r\n  return async (dispatch) => {\r\n\r\n    try {\r\n      \r\n      const resp= await fetchWithToken('events');\r\n      const body= await resp.json();\r\n      // const events= body.events;\r\n      const events= prepareEvents(body.events); //En caso de que no carguen los eventos\r\n\r\n      dispatch( eventLoaded(events) );\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  };\r\n};\r\n\r\nconst eventLoaded= (events) => ({\r\n  type: types.eventLoaded,\r\n  payload: events\r\n});\r\n\r\nexport const eventLogout= () => ({\r\n  type: types.eventLogout\r\n});","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin= ( email, password ) => {\r\n  return async (dispatch) => {\r\n    \r\n    const resp= await fetchWithoutToken( 'auth', { email, password}, 'POST' );\r\n    const body= await resp.json();\r\n\r\n    if(body.ok){\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n    } else{\r\n      Swal.fire('Error', body.msg, 'error');\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister= ( email, name, password) => {\r\n  return async (dispatch) => {\r\n\r\n    const resp= await fetchWithoutToken( 'auth/new', { email, name, password}, 'POST' );\r\n    const body= await resp.json();\r\n\r\n    if(body.ok){\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n    } else if(body.msg){\r\n      Swal.fire('Error', body.msg, 'error');\r\n    } else{\r\n      Swal.fire('Error', 'Please fill all the fields correctly', 'error');\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const startChecking= () => {\r\n  return async (dispatch) => {\r\n\r\n    const resp= await fetchWithToken( 'auth/renew' );\r\n    const body= await resp.json();\r\n\r\n    if(body.ok){\r\n      localStorage.setItem('token', body.token);\r\n      localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n      dispatch( login({\r\n        uid: body.uid,\r\n        name: body.name\r\n      }));\r\n    } else{\r\n      dispatch( checkingFinish() );\r\n    }\r\n\r\n  };\r\n};\r\n\r\nconst checkingFinish= () => ({\r\n  type: types.authCheckingFinish\r\n});\r\n\r\nconst login= (user) => ({\r\n  type: types.authLogin,\r\n  payload: user\r\n});\r\n\r\nexport const startLogout= () => {\r\n  return (dispatch) => {\r\n\r\n    localStorage.clear();\r\n    dispatch( eventLogout() );\r\n    dispatch( logout() );\r\n\r\n  };\r\n};\r\n\r\nconst logout= () => ({\r\n  type: types.authLogout\r\n});","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [ formLoginValues, handleLoginInputChange ]= useForm({\r\n    lEmail: 'jro@gmail.com',\r\n    lPassword: '123456'\r\n  });\r\n\r\n  const [ formRegisterValues, handleRegisterInputChange ]= useForm({\r\n    rName: 'Ropo',\r\n    rEmail: 'jropo@gmail.com',\r\n    rPassword: '123456',\r\n    rPassword2: '123456'\r\n  });\r\n\r\n  const { lEmail, lPassword }= formLoginValues;\r\n  const { rEmail, rName , rPassword , rPassword2 }= formRegisterValues;\r\n\r\n  const handleLogin= (e) => {\r\n    e.preventDefault();\r\n    dispatch( startLogin( lEmail, lPassword ) );\r\n  };\r\n\r\n  const handleRegister= (e) => {\r\n    e.preventDefault();\r\n\r\n    if( rPassword !== rPassword2 ){\r\n      return Swal.fire('Error', 'Passwords must match', 'error');\r\n    }\r\n    \r\n    dispatch( startRegister( rEmail, rName, rPassword ) );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>Log in</h3>\r\n          <form onSubmit= { handleLogin }>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                name= 'lEmail'\r\n                value= { lEmail }\r\n                onChange= { handleLoginInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\"\r\n                name= 'lPassword'\r\n                value= { lPassword }\r\n                onChange= { handleLoginInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"submit\"\r\n                className=\"btnSubmit\"\r\n                value=\"Login\" \r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 login-form-2\">\r\n          <h3>Register</h3>\r\n          <form onSubmit= { handleRegister }>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Name\"\r\n                name= 'rName'\r\n                value= { rName }\r\n                onChange= { handleRegisterInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Email\"\r\n                name= 'rEmail'\r\n                value= { rEmail }\r\n                onChange= { handleRegisterInputChange }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Password\" \r\n                name= 'rPassword'\r\n                value= { rPassword }\r\n                onChange= { handleRegisterInputChange }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Repeat password\"\r\n                name= 'rPassword2'\r\n                value= { rPassword2 }\r\n                onChange= { handleRegisterInputChange }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input \r\n                type=\"submit\" \r\n                className=\"btnSubmit\" \r\n                value=\"Create account\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n  const { name } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout= () => {\r\n    dispatch( startLogout() );\r\n  };\r\n\r\n  return (\r\n    <div className= 'navbar navbar-dark bg-dark mb-4'>\r\n      <span className= 'navbar-brand'>\r\n        {name}\r\n      </span>\r\n      <button\r\n        className= 'btn btn-outline-danger'\r\n        onClick= { handleLogout }\r\n      >\r\n        <i className= 'fas fa-sign-out-alt'></i>\r\n        <span> Logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n  \r\n  const { title, user }= event;\r\n\r\n  return (\r\n    <div>\r\n      <span>{title}</span>\r\n      <strong>- {user.name}</strong>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal= () => ({\r\n  type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal= () => ({\r\n  type: types.uiCloseModal\r\n});","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\nModal.setAppElement('#root')\r\n\r\nconst now= moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOne= now.clone().add(1, 'hours');\r\n\r\nconst initEvent= {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlusOne.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const { modalOpen } = useSelector(state => state.ui);\r\n  const { activeEvent } = useSelector(state => state.calendar);\r\n  \r\n  const dispatch = useDispatch();\r\n  \r\n  const [startDate, setStartDate] = useState(now.toDate());\r\n  const [endDate, setEndDate] = useState(nowPlusOne.toDate());\r\n  const [validTitle, setValidTitle] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { title, notes, start, end }= formValues;\r\n\r\n  useEffect(() => {\r\n    if(activeEvent){\r\n      setFormValues(activeEvent);\r\n    } else {\r\n      setFormValues( initEvent );\r\n    }\r\n  }, [activeEvent]);\r\n\r\n  const handleInputChange= ({target}) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    });\r\n  };\r\n\r\n  const closeModal= () => {\r\n    dispatch( uiCloseModal() );\r\n    dispatch( eventClearActiveEvent() );\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  const handleStartDateChange= (e) => {\r\n    setStartDate(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e\r\n    });\r\n  };\r\n\r\n  const handleEndDateChange= (e) => {\r\n    setEndDate(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm= (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart= moment(start);\r\n    const momentEnd= moment(end);\r\n\r\n    if(momentStart.isSameOrAfter(momentEnd)){\r\n      Swal.fire('Error', 'End date has to be greater that start date', 'error');\r\n      return;\r\n    }\r\n\r\n    if(title.trim().length < 2){\r\n      return setValidTitle(false);\r\n    }\r\n\r\n    if(activeEvent) {\r\n      dispatch( eventStartUpdate(formValues) );\r\n    }else{\r\n      dispatch( eventStartAddNew(formValues) );\r\n    }\r\n\r\n    setValidTitle(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS= {200}\r\n      className= 'modal'\r\n      overlayClassName= 'modal-fondo'\r\n    >\r\n      <h1> { (activeEvent)? 'Edit event' : 'New event' } </h1>\r\n      <hr />\r\n      <form\r\n        className=\"container\"\r\n        onSubmit= {handleSubmitForm}\r\n      >\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={startDate}\r\n            className= 'form-control'\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={endDate}\r\n            minDate= {startDate}\r\n            className= 'form-control'\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input \r\n            type=\"text\" \r\n            className={`form-control ${!validTitle && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value= {title}\r\n            onChange= {handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea \r\n            type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value= {notes}\r\n            onChange= {handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick= () => {\r\n    dispatch( uiOpenModal() );\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick= {handleClick}\r\n      className= 'btn btn-primary fab'\r\n    >\r\n      <i className= 'fas fa-plus'></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDelete= () => {\r\n    dispatch( eventStartDelete() );\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick= {handleDelete}\r\n      className= 'btn btn-danger fab-danger'\r\n    >\r\n      <i className= 'fas fa-trash '></i>\r\n      <span> Delete event </span>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n// import 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n// import { messages } from '../../helpers/calendar-messages-es';\r\n\r\n// moment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const { events, activeEvent } = useSelector(state => state.calendar);\r\n  const { uid } = useSelector(state => state.auth);\r\n\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n  \r\n  useEffect(() => {\r\n    \r\n    dispatch( eventStartLoading() );\r\n  }, [dispatch]);\r\n\r\n  const onDoubleClick= (e) => {\r\n    dispatch( uiOpenModal() );\r\n  };\r\n\r\n  const onSelectEvent= (e) => {\r\n    dispatch( eventSetActive(e) );\r\n  };\r\n\r\n  const onViewChange= (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem('lastView', e);\r\n  };\r\n\r\n  const onSelectSlot= (e) => {\r\n    dispatch( eventClearActiveEvent() );\r\n  };\r\n\r\n  const eventStyleGetter= ( event, start, end, isSelected ) => {\r\n\r\n    const style= {\r\n      backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n      borderRadius: '0px',\r\n      opacity: 0.8,\r\n      display: 'block',\r\n      color: 'white'\r\n    };\r\n\r\n    return {\r\n      style\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className= 'calendar-screen'>\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        // messages= {messages}\r\n        eventPropGetter= {eventStyleGetter}\r\n        onDoubleClickEvent= {onDoubleClick}\r\n        onSelectEvent= {onSelectEvent}\r\n        onSelectSlot= {onSelectSlot}\r\n        selectable= {true}\r\n        onView= {onViewChange}\r\n        view= {lastView}\r\n        components= {{\r\n          event: CalendarEvent\r\n        }}\r\n      />\r\n      <AddNewFab />\r\n      {\r\n        (activeEvent) && <DeleteEventFab />\r\n      }\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component= { (props) => (\r\n        (isAuthenticated)\r\n          ? <Redirect to='/' />\r\n          : <Component {...props} />\r\n      )}\r\n\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes= {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route {...rest}\r\n      component= { (props) => (\r\n        (isAuthenticated)\r\n          ? <Component {...props} />\r\n          : <Redirect to='/login' />\r\n      )}\r\n\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes= {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n};","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch( startChecking() );\r\n\r\n  }, [dispatch]);\r\n\r\n  if(checking){\r\n    return <h1>Loading...</h1>\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            exact\r\n            path= '/login'\r\n            component= { LoginScreen }\r\n            isAuthenticated= { !!uid }\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path= '/'\r\n            component= { CalendarScreen }\r\n            isAuthenticated= { !!uid }\r\n          />\r\n\r\n          <Redirect to='/login' />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n  modalOpen: false\r\n};\r\n\r\nexport const uiReducer= ( state= initialState, action ) => {\r\n\r\n  switch (action.type) {\r\n    case types.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: true\r\n      };\r\n    case types.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        modalOpen: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { types } from \"../types/types\";\r\n\r\n// {\r\n//   id: 'oasdhfiasd',\r\n//   title: 'Cumpleaños del jefe',\r\n//   start: moment().toDate(),\r\n//   end: moment().add(2, 'hours').toDate(),\r\n//   notes: 'Buy cake',\r\n//   user: {\r\n//     _id: '1234',\r\n//     name: 'Juan Ro'\r\n//   }\r\n// }\r\n\r\nconst initialState= {\r\n  events: [],\r\n  activeEvent: null\r\n};\r\n\r\nexport const calendarReducer= ( state= initialState, action ) => {\r\n\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload\r\n      };\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload]\r\n      };\r\n    case types.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null\r\n      };\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(\r\n          e => ( e.id === action.payload.id ) ? action.payload : e\r\n        )\r\n      };\r\n    case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          e => ( e.id !== state.activeEvent.id )\r\n        ),\r\n        activeEvent: null\r\n      };\r\n    case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      };\r\n    case types.eventLogout:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n  checking: true,\r\n  // uid: null,\r\n  // name: null\r\n};\r\n\r\nexport const authReducer= ( state= initialState, action ) => {\r\n\r\n  switch (action.type) {\r\n    case types.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false\r\n      };\r\n    case types.authCheckingFinish:\r\n      return {\r\n        ...state,\r\n        checking: false\r\n      };\r\n    case types.authLogout:\r\n      return {\r\n        checking: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer= combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store= createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <div>\r\n      <Provider store= {store}>\r\n        <AppRouter />\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}